<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.3.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>
	<artifactId>configserver</artifactId>
	<version>1.0</version>
	<packaging>jar</packaging>
	<properties>		
		<spring-cloud.version>Greenwich.RELEASE</spring-cloud.version>
		<start-class>develop.confsvr.ConfigServerApplication</start-class>
		<docker.registry.name>localhost:5000/</docker.registry.name>
		<docker.repository.name>${docker.registry.name}robert0714/${project.artifactId}</docker.repository.name>
		<docker.host.address>192.168.99.100</docker.host.address>
		<docker.port>8888</docker.port>
	</properties>
	<name>maas-config-server</name> 
	<dependencies>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-config-server</artifactId>
		</dependency>
	
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-config</artifactId>
		</dependency>
	
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
		</dependency>
	 
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<build>	    
		<plugins>
		    <plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.28.0</version>
				<configuration>
					<images>
						<image>
							<name>${docker.repository.name}:${project.version}</name>
							<alias>${project.artifactId}</alias>
							<build>
								<from>robert0714/oracle-java-8:8u151-jce</from>
								<maintainer>robert0714</maintainer>
								<assembly>
									<descriptor>docker-assembly.xml</descriptor>
								</assembly>
								<ports>
									<port>${docker.port}</port>
								</ports>
								<cmd>
									<exec>
										<arg>java</arg>
										<arg>-jar</arg>
										<arg>/maven/${project.build.finalName}.jar</arg>
										<arg>--java.security.egd=file:/dev/./urandom </arg>
									</exec>
								</cmd>
							</build>
							<run>
								<namingStrategy>alias</namingStrategy>
								<ports>
									<port>${docker.port}:8888</port>
								</ports>
 <!--
  Sample project for demonstrating the various network modes
  Call it with 'mvn install' and one of the following profiles:
  * "container" : Container connecting to another container's network
  * "bridge"    : Bridge mode
  * "host"      : Host mode
  * "custom"    : Custom network 'test-network' (must be created with 'docker network create test-network' in advance)
  -->
								<net>host</net>
								<volumes>
									<bind>
										<volume>${user.home}/logs:/logs</volume>
									</bind>
								</volumes>								
								<log>
									<prefix>${project.artifactId}</prefix>
									<color>cyan</color>
								</log>
							</run>
						</image>
					</images>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<executable>true</executable>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>build-info</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>3.0.0</version>
				<executions>
					<execution>
						<id>timestamp-property</id>
						<goals>
							<goal>timestamp-property</goal>
						</goals>
						<configuration>
							<name>build.time</name>
							<!-- <pattern>yyyy-MM-dd-HH-mm</pattern> -->
							<pattern>yyyy-MM-dd</pattern>
							<locale>zh</locale>
							<timeZone>GMT+8</timeZone>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<repositories>
		<repository>
			<id>spring-releases</id>
			<name>Spring Releases</name>
			<url>https://repo.spring.io/libs-release</url>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>spring-releases</id>
			<name>Spring Releases</name>
			<url>https://repo.spring.io/libs-release</url>
		</pluginRepository>
	</pluginRepositories>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<profiles>
		<profile>
			<id>chain</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<docker.registry.name></docker.registry.name> 
			</properties>
		</profile>
		<profile>
			<activation>
				<os>
					<name>windows 10</name>
					<family>windows</family>
					<arch>amd64</arch>
					<version>10.0</version>
				</os>
			</activation>
			<properties>
				<docker.registry.name></docker.registry.name>
				<docker.port>8080</docker.port>
				<docker.version>dev</docker.version>
				<docker.host.address>192.168.99.100</docker.host.address>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>io.fabric8</groupId>
						<artifactId>docker-maven-plugin</artifactId>
						<version>0.28.0</version>
						<configuration>
							<machine>
								<name>default</name>
								<autoCreate>true</autoCreate>
								<createOptions>
									<driver>virtualbox</driver>
									<virtualbox-cpu-count>2</virtualbox-cpu-count>
								</createOptions>
							</machine>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>iisi</id>
			<properties>
				<docker.registry.name>192.168.57.29:5000/</docker.registry.name> 
			</properties>
		</profile>
		<profile>
			<id>dev</id>
			<properties>
				<docker.registry.name></docker.registry.name> 
			</properties>
		</profile>
		<profile>
			<id>lab</id>
			<properties>
				<docker.registry.name>172.21.3.105:5000/</docker.registry.name> 
			</properties>
		</profile>
		<profile>
			<id>staging</id>
			<properties>
				<docker.registry.name>172.21.1.63:5000/</docker.registry.name> 
			</properties>
		</profile>
		<profile>
			<id>production</id>
			<properties>
				<docker.registry.name>172.21.11.63:5000/</docker.registry.name> 
			</properties>
		</profile>
		<profile>
			<id>lab-docker</id>
			<properties>
				<docker.registry.name>172.21.3.105:5000/</docker.registry.name> 
			</properties>
		</profile>
		<profile>
			<id>staging-docker</id>
			<properties>
				<docker.registry.name>172.21.1.63:5000/</docker.registry.name> 
			</properties>
		</profile>
		<profile>
			<id>production-docker</id>
			<properties>
				<docker.registry.name>172.21.11.63:5000/</docker.registry.name> 
			</properties>
		</profile>
	</profiles>
</project>
